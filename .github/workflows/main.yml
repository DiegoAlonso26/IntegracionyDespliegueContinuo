# 🚀 Pipeline de CI/CD detallado para despliegue local con Self-Hosted Runner y visibilidad total

name: Deploy Locally with Self-Hosted Runner

on:
  push:
    branches: [ "main" ]  
  workflow_dispatch:      

# Variables de entorno para usar en Docker Compose y logs
env:
  DOCKER_PROJECT_NAME: 'lpapp'
  APP_CONTAINER_NAME: 'lp-app'
  DB_CONTAINER_NAME: 'lp-db'
  DB_NAME: 'lp'
  DB_USER: 'root'
  DB_PASSWORD: 'root'

jobs:
  build-and-deploy:
    name: Build and Deploy Locally
    runs-on: self-hosted

    steps:
      - name: ✅ Paso 1 - Descargar el repositorio
        uses: actions/checkout@v4

      - name: 📝 Paso 2 - Ver archivos recibidos
        run: |
          echo "ℹ️ Archivos en el runner:"
          ls -la

      - name: ☕ Paso 3 - Instalar Java y preparar Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 📅 Paso 4 - Compilar proyecto con Maven
        run: |
          echo "🎧 Compilando proyecto con Maven..."
          mvn clean package -DskipTests

      - name: 🚜 Paso 5 - Desplegar con Docker Compose
        run: |
          echo "✅ Iniciando despliegue en el runner local..."
          
          echo "🚽 Apagando contenedores anteriores (si existen)..."
          docker compose down -v --remove-orphans || echo "⚠️ Nada que apagar."

          echo "🏋️ Verificando estado actual de contenedores..."
          docker ps -a

          echo "🛠️ Construyendo imagen y levantando contenedores..."
          docker compose up -d --build

          echo "⏳ Esperando a que se levanten los servicios..."
          sleep 15

          echo "🔍 Contenedores activos:"
          docker ps

          echo "📄 Logs recientes de la app:"
          docker logs --tail=50 ${{ env.APP_CONTAINER_NAME }} || echo "⚠️ No se encontraron logs."

          echo "🎉 Despliegue completado correctamente."
